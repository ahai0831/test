import("//third_party/third_template.gni")

library_version = "zlib-1.2.11"

third_fetch_code("fetch_code") {
  csv_file = library_version + ".csv"

  # Take care of the suffix name
  package_file = library_version + ".tar.xz"
}

third_config("zlib_internal") {
  include_dirs = [ "." ]
  defines = [
    "_CRT_SECURE_NO_DEPRECATE",
    "_CRT_NONSTDC_NO_DEPRECATE",
  ]
}

third_config("zlib_using") {
  include_dirs = [
    ".",
    "include",
  ]
  defines = [
    "HAVE_ZLIB_H",
    "HAVE_ZLIB",
    "HAVE_LIBZ",
  ]
  if (is_win) {
    # Windows should be different.
    libs = [ "zlib.lib" ]
  }
}

third_static_library("zlib") {
  deps = [
    ":fetch_code",
  ]

  sources = [
    "adler32.c",
    "compress.c",
    "contrib/minizip/ioapi.c",
    "contrib/minizip/unzip.c",
    "contrib/minizip/zip.c",
    "crc32.c",
    "deflate.c",
    "gzclose.c",
    "gzlib.c",
    "gzread.c",
    "gzwrite.c",
    "infback.c",
    "inffast.c",
    "inflate.c",
    "inftrees.c",
    "trees.c",
    "uncompr.c",
    "zutil.c",
  ]
  public = [
    "zconf.h",
    "zlib.h",
  ]
  configs = [ ":zlib_internal" ]
  public_configs = [ ":zlib_using" ]
}
